list.dir("/home/snarles/stat312data")
list.files("/home/snarles/stat312data")
ddir <- "/home/snarles/stat312data"
list.files(ddir)
load(paste0(ddir, "/all_voxel_locations.RData"))
load(paste0(ddir, "/valid_index.RData"))
load(paste0(ddir, "/valid_index.RData"))
load(paste0(ddir, "/feature_train.RData"))
load(paste0(ddir, "/train_resp_all.RData"))
read.csv(paste0(ddir, "/train_resp_all.csv"))
valid_resp_all <- read.csv(paste0(ddir, "/valid_resp_all.csv"))
load(paste0(ddir, "/feature_valid.RData"))
load(paste0(ddir, "/train_stim.RData"))
load(paste0(ddir, "/valid_stim.RData"))
dim(valid_resp_all)
dim(voxel.loc)
head(voxel.loc)
head(valid_resp_all)
valid_resp_all <- read.csv(paste0(ddir, "/valid_resp_all.csv"), header = FALSE)
load(paste0(ddir, "/valid_v1.RData"))
dim(valid_v1)
load(paste0(ddir, "/v1_locations.RData"))
str(train_stim)
getwd()
setwd("~/github/misc/stat312/project2")
ddir <- "/home/snarles/stat312data"
list.files(ddir)
load(paste0(ddir, "/valid_index.RData"))
load(paste0(ddir, "/valid_stim.RData"))
load(paste0(ddir, "/valid_v1.RData"))
load(paste0(ddir, "/v1_locations.RData"))
dim(valid_v1)
nvox <- 1331
ntime <- 1560
clauses
valid_v1_rank <- apply(valid_v1, 2, rank)
dim(valid_v1_rank)
valid_v1_rank <- apply(valid_v1, 2, rank)/nvox
apply(valid_v1_rank, 2, max)
apply(valid_v1_rank, 2, min)
filt_imgs <- sample(120, 5)
filt_imgs <- sample(120, 20)
filt_valid_index <- valid_index[valid_index %in% filt_imgs]
filt_v1_rank <- valid_v1_rank[, valid_index %in% filt_imgs]
dim(filt_v1_rank)
svd_res <- svd(filt_v1_rank)
help(svd)
temp <- eval(quote(u %*% diag(d) %*% t(v)), envir = svd_res)
temp[1:10]
filt_v1_rank[1:10]
plot(d)
plot(svd_res$d)
library(Rcpp)
setwd("~/github/misc/stat312/project2")
sourceCpp('pdist.cpp')
pdist
fastPdist2
am <- matrix(rnorm(200), 20, 10)
fastPdist2(am, am)
ans <- fastPdist2(am, am)
dim(ans)
ans <- fastPdist2(t(am), t(am))
dim(ans)
ans
base_dists <- fastPdist2(t(filt_v1_rank), t(filt_v1_rank))
am
row(am)
col(am)
((1:10) + 2)[col(am)]
`[`
filt_valid_index
twincomp <- matrix(
filt_valid_index[row(base_dists)] == filt_valid_index[col(base_dists)],
nrow = len(filt_valid_index)
)
twincomp <- matrix(
filt_valid_index[row(base_dists)] == filt_valid_index[col(base_dists)],
nrow = length(filt_valid_index)
)
diag(twincomp)
othercomp <- !twincomp
diag(twincomp) <- !diag(twincomp)
base_twins <- base_dists[twincomp]
length(base_twins)
base_other <- base_dists[othercomp]
summary(base_twins)
summary(base_other)
comp1 <- matrix(filt_valid_index[row(base_dists)],
nrow = length(filt_valid_index))
comp2 <- matrix(filt_valid_index[col(base_dists)],
nrow = length(filt_valid_index))
comp1[1:10, 1:10]
comp2[1:10, 1:10]
base_probs <- numeric(length(unique(filt_valid_index)))
compd <- row(base_dists)==col(base_dists)
for (i in 1:length(unique(filt_valid_index))) {
img_ind <- filt_valid_index[i]
twins <- base_dists[comp1 == img_ind & comp2 == img_ind & !compd]
others <- base_dists[comp1 == img_ind & comp2 != img_ind]
base_probs[i] <- sum(sample(others, 1000, TRUE) >
sample(twins, 1000, TRUE))/1000
}
base_probs
mean(base_probs)
1/mean(base_probs)
1/(1-mean(base_probs))
